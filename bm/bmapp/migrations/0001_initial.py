# Generated by Django 5.1.6 on 2025-05-06 12:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Accounttable',
            fields=[
                ('accountno', models.BigAutoField(db_column='accountNo', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('password', models.CharField(blank=True, null=True)),
                ('nominee', models.TextField(blank=True, null=True)),
                ('accounttype', models.CharField(blank=True, db_column='accountType', null=True)),
                ('ifsc_code', models.TextField(blank=True, db_column='IFSC_code', null=True)),
            ],
            options={
                'db_table': 'accountTable',
                'db_table_comment': 'table for storing accounts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Applicationtable',
            fields=[
                ('applicationid', models.BigAutoField(db_column='applicationID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('status', models.CharField(blank=True, null=True)),
                ('appliedfor', models.TextField(blank=True, null=True)),
                ('ifsc_code', models.TextField(blank=True, db_column='IFSC_code', null=True)),
            ],
            options={
                'db_table': 'applicationTable',
                'db_table_comment': 'table for concern applications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customertable',
            fields=[
                ('customerid', models.BigAutoField(db_column='customerID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('name', models.CharField(blank=True, null=True)),
                ('mobile', models.CharField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('income', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('password', models.CharField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('pan', models.TextField(blank=True, db_column='PAN', null=True, unique=True)),
                ('occupation', models.TextField(blank=True, null=True)),
                ('emailid', models.TextField(blank=True, null=True)),
                ('emergencycontact', models.CharField(blank=True, db_column='emergencyContact', null=True)),
            ],
            options={
                'db_table': 'customerTable',
                'db_table_comment': 'table to store customer info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employeetable',
            fields=[
                ('employeeid', models.BigAutoField(db_column='employeeID', primary_key=True, serialize=False)),
                ('name', models.CharField()),
                ('mobile', models.CharField(blank=True, null=True)),
                ('password', models.CharField(blank=True, null=True)),
                ('ifsc_code', models.TextField(blank=True, db_column='IFSC_code', null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('emailid', models.CharField(blank=True, db_column='emailID', null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'employeeTable',
                'db_table_comment': 'Table storing employee data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedbacktable',
            fields=[
                ('feedbackid', models.BigAutoField(db_column='feedbackID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('status', models.CharField(blank=True, null=True)),
                ('feedback', models.CharField(blank=True, null=True)),
                ('ifsc_code', models.TextField(blank=True, db_column='IFSC_code', null=True)),
            ],
            options={
                'db_table': 'feedbackTable',
                'db_table_comment': 'table for storing feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loandeniedtable',
            fields=[
                ('loanid', models.BigAutoField(db_column='loanID', primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('interest', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'loanDeniedTable',
                'db_table_comment': 'Table containing info about denied loans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loangrantedtable',
            fields=[
                ('loanid', models.BigAutoField(db_column='loanID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('duration', models.CharField(blank=True, null=True)),
                ('lastemi', models.DateTimeField(blank=True, db_column='lastEMI', null=True)),
                ('emiamount', models.DecimalField(blank=True, db_column='EMIamount', decimal_places=65535, max_digits=65535, null=True)),
            ],
            options={
                'db_table': 'loanGrantedTable',
                'db_table_comment': 'table to store granted loan details',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loanrequesttable',
            fields=[
                ('loadid', models.BigAutoField(db_column='loadID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('interest', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('duration', models.CharField(blank=True, null=True)),
                ('ifsc_code', models.TextField(blank=True, db_column='IFSC_code', null=True)),
                ('loantype', models.TextField(blank=True, db_column='loanType', null=True)),
            ],
            options={
                'db_table': 'loanRequestTable',
                'db_table_comment': 'table for storing loan requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Offlinetransactiontable',
            fields=[
                ('transactionid', models.BigAutoField(db_column='transactionID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('action', models.CharField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('employeeid', models.BigIntegerField(blank=True, db_column='employeeID', null=True)),
            ],
            options={
                'db_table': 'offlineTransactionTable',
                'db_table_comment': 'table for on-site transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Onlinetransactiontable',
            fields=[
                ('transactionid', models.BigAutoField(db_column='transactionID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('action', models.CharField(blank=True, null=True)),
                ('toaccountno', models.BigIntegerField(blank=True, db_column='toAccountNo', null=True)),
            ],
            options={
                'db_table': 'onlineTransactionTable',
                'db_table_comment': 'table to store online transactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Responsetable',
            fields=[
                ('responseid', models.BigAutoField(db_column='responseID', primary_key=True, serialize=False)),
                ('createdat', models.DateTimeField(db_column='createdAt')),
                ('employeeid', models.BigIntegerField(blank=True, db_column='employeeID', null=True)),
                ('feedback', models.CharField(blank=True, null=True)),
            ],
            options={
                'db_table': 'responseTable',
                'db_table_comment': 'table for feedback responses',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Processingtable',
            fields=[
                ('applicationid', models.OneToOneField(db_column='applicationID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='bmapp.applicationtable')),
                ('createdat', models.DateTimeField(blank=True, db_column='createdAt', null=True)),
            ],
            options={
                'db_table': 'processingTable',
                'db_table_comment': 'table to store applications processed',
                'managed': False,
            },
        ),
    ]
